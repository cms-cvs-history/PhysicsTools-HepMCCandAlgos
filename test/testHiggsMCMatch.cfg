process MCCand = {
#includes
include "FWCore/MessageLogger/data/MessageLogger.cfi"
include "SimGeneral/HepPDTESSource/data/pythiapdt.cfi"
include "PhysicsTools/HepMCCandAlgos/data/genParticleCandidates.cfi"
include "PhysicsTools/RecoCandAlgos/data/allTracks.cfi"

service = TFileService { 
  string fileName = "histo.root"
}

#event source
  source = PoolSource {
    untracked vstring fileNames = { 
      "file:aodsim.root"
    }
  }

  module Zs = CandShallowCloneCombiner {
    string decay = "allTracks@+ allTracks@-"
    string cut = "50 < mass < 120"
  }

  module Hs = CandShallowCloneCombiner {
    string decay = "Zs Zs"
    string cut = "0 < mass < 600"
  }

  module trackMatch = MCTruthDeltaRMatcher {
    InputTag src = allTracks
    InputTag matched = genParticleCandidates
    double distMin = 0.2
#    vint32 matchPDGId = { 13 }
  }

  module ZMatch = MCTruthCompositeMatcher {
    InputTag src = Zs
    InputTag matchMap = trackMatch
  }

  module HMatch = MCTruthCompositeMatcher {
    InputTag src = Hs
    InputTag matchMap = trackMatch
  }

  module Htrue = MCTruthMatchFlagProducer {
    InputTag src = Hs
    InputTag matchMap = HMatch
    vint32 pdgId = { 25 } # h0
  }

  module Ztrue = MCTruthMatchFlagProducer {
    InputTag src = Zs
    InputTag matchMap = ZMatch
    vint32 pdgId = { 23 } # Z0
  }

  block histoLimits = {
   untracked double massMin = 0
   untracked double massMax = 300
   untracked double ptMax = 200
  }

  module Zhisto = CandHistoAnalyzer {
   InputTag src = Zs
   using histoLimits
  }

  module trueZhisto = CandHistoAnalyzer {
   InputTag src =Ztrue
   using histoLimits
  }

  module Hhisto = CandHistoAnalyzer {
   InputTag src = Hs
   using histoLimits
  }

  module trueHhisto = CandHistoAnalyzer {
   InputTag src = Htrue
   using histoLimits
  }

  module printEventNumber = AsciiOutputModule { }

  module printTree = ParticleTreeDrawer {
    InputTag src = genParticleCandidates
#    untracked bool printP4 = true
#    untracked bool printPtEtaPhi = true
    untracked bool printStatus = true
  }

  module out = PoolOutputModule { 
    untracked string fileName = "higgs_gen.root" 
    untracked vstring outputCommands = {
      "drop *",
      "keep recoCandidatesOwnedrecoCandidatesOwneduintedmOneToOneedmAssociationMap_*_*_*",
      "keep recoCandidatesOwned_*_*_*",
      "keep ints_*_*_*"
    }  
  }

#paths
  path gen = { 
    genParticleCandidates
  }

  path reco = {
    allTracks, Zs, Hs
  }

  path match = {
    trackMatch, ZMatch, HMatch, Ztrue, Htrue
  }

  path analysis = {
    Zhisto, trueZhisto, Hhisto, trueHhisto
  }

  endpath o = { 
    printEventNumber, printTree, out
  }
}
