process MCCand = {
#includes
include "FWCore/MessageLogger/data/MessageLogger.cfi"
include "SimGeneral/HepPDTESSource/data/pythiapdt.cfi"
include "PhysicsTools/HepMCCandAlgos/data/genParticleCandidates.cfi"
include "PhysicsTools/RecoAlgos/data/allTracks.cfi"

#save histograms to ROOT file
  service = TFileService {
    string fileName = "histo.root"
  }

#event source
  source = PoolSource {
    untracked vstring fileNames = { 
      "file:aodsim.root" 
    }
  }

  module V0s = CandShallowCloneCombiner {
    string decay = "allTracks@+ allTracks@-"
    string cut = "0 < mass < 2.5"
  }

  module mcMatch = MCTruthDeltaRMatcher {
    InputTag src = allTracks
    InputTag matched = genParticleCandidates
    double distMin = 0.2
  }

  module compMatch = MCTruthCompositeMatcher {
    InputTag src = V0s
    InputTag matchMap = mcMatch
  }

  module trueV0s = MCTruthMatchFlagProducer {
    InputTag src = V0s
    InputTag matchMap = compMatch
    vint32 pdgId = { 113 } # rho0
  }

  block histoLimits = {
   untracked double massMin = 0
   untracked double massMax = 3
   untracked double ptMax = 100
  }

  module histo = CandHistoAnalyzer {
   InputTag src = V0s
   untracked string histoutputFile = "histo.root"
   using histoLimits
  }

  module KstarHisto = CandHistoAnalyzer {
   InputTag src =trueV0s
   untracked string histoutputFile = "histo_true.root"
   using histoLimits
  }

#output modules
#  module out = PoolOutputModule { 
#    untracked string fileName = "genanal.root" 
#    untracked vstring outputCommands = {
#      "keep *"
#    }  
#  }

  module printEventNumber = AsciiOutputModule { }

#paths
  path gen = { 
    genParticleCandidates
  }

  path reco = {
    allTracks, V0s 
  }

  path match = {
    mcMatch, compMatch, trueV0s
  }

  path analysis = {
    histo, KstarHisto
  }

  endpath o = { 
#    out,  
    printEventNumber 
  }
}
